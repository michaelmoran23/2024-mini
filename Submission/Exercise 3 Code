import urequests
from machine import Pin
import time
import network


ssid = "cwh"
password = "CWHcwh@0129"

wlan = network.WLAN(network.STA_IF)
wlan.active(True)
wlan.connect(ssid, password)


while not wlan.isconnected():
    print("Connecting to Wi-Fi...")
    time.sleep(1)
print("Connected to Wi-Fi")


THINGSPEAK_URL = 'https://api.thingspeak.com/update'
WRITE_API_KEY = 'IGNGQEZWBYSXRYPB'  

def random_time_interval(tmin: float, tmax: float) -> float:
    """Return a random time interval between min and max."""
    return random.uniform(tmin, tmax)

def blinker(N: int, led: Pin) -> None:
    """Let user know game started / is over."""
    for _ in range(N):
        led.high()
        time.sleep(0.1)
        led.low()
        time.sleep(0.1)

def scorer(t: list[int | None]) -> None:
    """Collate results and compute average, minimum, maximum response time."""
    
    
    misses = t.count(None)
    print(f"You missed the light {misses} / {len(t)} times")

    
    t_good = [x for x in t if x is not None]

    if t_good:
        min_time = min(t_good)
        max_time = max(t_good)
        avg_time = sum(t_good) / len(t_good)
        score = (len(t_good) / len(t))

        print(f"Min Time: {min_time} ms")
        print(f"Max Time: {max_time} ms")
        print(f"Average Time: {avg_time:.2f} ms")
        print(f"Score: {score * 100:.2f}%")

        data = {
            'api_key': WRITE_API_KEY,
            'field1': min_time,
            'field2': max_time,
            'field3': avg_time,
            'field4': score * 100,  
            'field5': misses
        }

        try:
            response = urequests.post(THINGSPEAK_URL, json=data)
            if response.status_code == 200:
                print("Data successfully uploaded to ThingSpeak!")
                print("Response:", response.text)
            else:
                print(f"Failed to upload data. Status code: {response.status_code}")
                print("Response:", response.text)
            response.close()
        except Exception as e:
            print(f"Error uploading data: {e}")

    else:
        print("No valid response times to report.")

if __name__ == "__main__":
    led = Pin("LED", Pin.OUT)
    button = Pin(16, Pin.IN, Pin.PULL_UP)

    t: list[int | None] = []

    
    blinker(3, led)

    
    N = 10
    on_ms = 1000  

    for i in range(N):
        time.sleep(random_time_interval(0.5, 5.0))

        led.high()

        tic = time.ticks_ms()
        t0 = None
        while time.ticks_diff(time.ticks_ms(), tic) < on_ms:
            if button.value() == 0:
                t0 = time.ticks_diff(time.ticks_ms(), tic)
                led.low()
                break
        t.append(t0)

        led.low()

    
    blinker(5, led)

    
    scorer(t)
